weighted and undirected using list

def addNode(v):
    if v in graph:
        print(v,"is readily available")
    else:
        graph[v]=[]
def show():
    for x in graph:
        print(x,':',graph[x])
def addEdge(node1,node2,w):
    if node1 not in graph:
        print(node1,'is not in present in graph')
    elif node2 not in graph:
        print(node2,'is not present in graph')
    else:
        graph[node1].append((node2,w))
        graph[node2].append((node1,w))
graph={}
while True:
    print()
    print("1.add node\n 2.add edge\n3.print list\n4.exit")
    ch=int(input('enter your choice'))
    if ch==1:
        v=input('enter node')
        addNode(v)
    elif ch==2:
        w=int(input('enter weight'))
        node1=input('enter node1')
        node2=input('enter node2')
        addEdge(node1,node2,w)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print('invalid choice')
        1.add node
 2.add edge
3.print list
4.exit
enter your choice1
enter nodea

1.add node
 2.add edge
3.print list
4.exit
enter your choice1
enter nodeb

1.add node
 2.add edge
3.print list
4.exit
enter your choice1
enter nodec

1.add node
 2.add edge
3.print list
4.exit
enter your choice2
enter weight2
enter node1a
enter node2b

1.add node
 2.add edge
3.print list
4.exit
enter your choice2
enter weight3
enter node1b
enter node2c

1.add node
 2.add edge
3.print list
4.exit
enter your choice2
enter weight5
enter node1a
enter node2c

1.add node
 2.add edge
3.print list
4.exit
enter your choice3
a : [('b', 2), ('c', 5)]
b : [('a', 2), ('c', 3)]
c : [('b', 3), ('a', 5)]

1.add node
 2.add edge
3.print list
4.exit